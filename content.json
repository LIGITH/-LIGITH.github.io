{"meta":{"title":"踏步向前","subtitle":"博客","description":"亲爱的，世界上只有你","author":"踏步向前","url":"https://github.com/LIGITH"},"pages":[{"title":"","date":"2017-05-27T09:07:52.620Z","updated":"2017-05-27T09:07:52.620Z","comments":false,"path":"categories/index.html","permalink":"https://github.com/LIGITH/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2017-05-28T15:17:04.000Z","updated":"2017-05-29T07:40:48.111Z","comments":false,"path":"links/index.html","permalink":"https://github.com/LIGITH/links/index.html","excerpt":"","text":"djllhs 简介：俗称的女汉子，拥有一个彪悍的内心，不羁的性格。当然，从外表上看是猜不出来这妹纸是个程序员滴~我的生活理念：生活要充满色彩，充满乐趣，做一个不一样的技术性妹纸"},{"title":"","date":"2017-05-27T09:07:03.330Z","updated":"2017-05-27T09:07:03.330Z","comments":false,"path":"tags/index.html","permalink":"https://github.com/LIGITH/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"我们都在路上","slug":"我们都在路上","date":"2017-05-30T03:11:59.000Z","updated":"2017-05-30T02:54:52.004Z","comments":true,"path":"个人情感/我们都在路上.html","link":"","permalink":"https://github.com/LIGITH/个人情感/我们都在路上.html","excerpt":"","text":"我们都在路上标签： 个人情感 感情或许是上帝给人类最好的礼物了，它让我们每个人都与众不同，也让我们每个人是一个真真的人，孤独的人，我们的世界也因此变得丰富多彩。不过，亲爱的，这个世界上只有你，这句温柔而坚定的话，请你一定要记住，强大莫过于此，只有你才能决定你怎么样度过你的每一天，无论是为家人，为朋友，你都应该不言放弃，如果你放弃了，它自然会让你永远屈服。所以关键不在于你打的多用力，而在于你能承受多重的打击并坚持下去。你能承受多少并坚持下去，这才是一个强者应该做的。","categories":[{"name":"个人情感","slug":"个人情感","permalink":"https://github.com/LIGITH/categories/个人情感/"}],"tags":[{"name":"人文","slug":"人文","permalink":"https://github.com/LIGITH/tags/人文/"}]},{"title":"从外网 SSH 进局域网，反向代理+正向代理解决方案","slug":"利用SSH进局域网","date":"2017-05-28T16:00:00.000Z","updated":"2017-05-29T02:51:51.946Z","comments":true,"path":"SSH/利用SSH进局域网.html","link":"","permalink":"https://github.com/LIGITH/SSH/利用SSH进局域网.html","excerpt":"","text":"标签： SSH 问题描述机器状况 目标从C机器使用访问A 解决方案环境需求：每台服务器都需要SSH客户端；A、B两台机器需要SSH服务器端。通常使用的是OpenSHH。 在Ubuntu上的安装过程为： sudo apt-get install openssl-server 实施步骤：1.建立A机器到B机器的反向代理【A机器上操作】 ssh -fCNR 端口1:localhost:22 usr_b@B.B.B.B 说明：端口1 为 B 机器上端口，用来与 A 机器上的22端口绑定。 eg: ssh -fCNR 10001:localhost:22 root@192.168.1.22 2.建立 B 机器上的正向代理，用作本地转发。做这一步是因为绑定后的 端口只支持本地访问【B 机器上操作】 ssh -fCNL &quot;*:端口2:localhost:端口1” localhost 说明：端口2为本地转发端口，用以和外网通信，并将数据转发到端口1，实现可以从其他机器访问。其中的*表示接受来自任意机器的访问。 eg: ssh -fCNL &quot;*:10007:localhost:10001&quot; localhost 3.现在在 C 机器上可以通过 B 机器 ssh 到 A 机器 ssh -p 端口2 usra@B.B.B.B 参数解释：-f 后台运行-C 允许压缩数据-N 不执行任何命令-R 将端口绑定到远程服务器，反向代理-L 将端口绑定到本地客户端，正向代理","categories":[{"name":"SSH","slug":"SSH","permalink":"https://github.com/LIGITH/categories/SSH/"}],"tags":[{"name":"后端","slug":"后端","permalink":"https://github.com/LIGITH/tags/后端/"}]},{"title":"我的博客诞生","slug":"我的博客诞生","date":"2017-05-28T16:00:00.000Z","updated":"2017-05-29T03:48:49.790Z","comments":true,"path":"个人情感/我的博客诞生.html","link":"","permalink":"https://github.com/LIGITH/个人情感/我的博客诞生.html","excerpt":"","text":"博客诞生标签： 个人情感 很神奇，难过的时候才想起自己，发现自己是不是待在原地太久了，忘记了以前的斗志昂扬，嘿嘿，一切还不晚，不求安稳，只为喜欢。 O(∩_∩)O谢谢你来到我的博客！","categories":[{"name":"个人情感","slug":"个人情感","permalink":"https://github.com/LIGITH/categories/个人情感/"}],"tags":[{"name":"人文","slug":"人文","permalink":"https://github.com/LIGITH/tags/人文/"}]},{"title":"迈入Linux的世界（一）","slug":"迈入Linux的世界（一）","date":"2017-05-28T16:00:00.000Z","updated":"2017-05-30T02:08:24.210Z","comments":true,"path":"Linux/迈入Linux的世界（一）.html","link":"","permalink":"https://github.com/LIGITH/Linux/迈入Linux的世界（一）.html","excerpt":"","text":"Linux简介标签： Linux Linux和Unix平时常常听到你会Linux吗？Unix呢？一直不明白他们之间的区别。只是知道他们名字很像，一些命令是可以共通的。后面知道了linux是免费的，unix是收费，是收费的自然会更稳定、更可靠些，毕竟是有商业公司支持的。其实它们的本质上并不是同一个东西。 最简单的说法就是Linux是一个类Unix内核。说到内核，这里可以解释下，它就是一个电脑程序，用于处理其它软件发出的输入输出的要求，将要求转换为数据处理的指令。那么为什么说Linux是一个类Unix内核呢？是因为linux是由李纳斯.特沃兹以安德鲁.S.塔尼鲍默(Andrew S Tanenbum)按照Unix系统的标准POSIX来开发的。同一个标准，自然是一类东西了。 这里要注意的是linux和unix的命令是区分大小写的。 CentOS7以太网络的配置而我最先接触的一个linux系统是CentOS7，当时是怀揣着好奇心探索着linux的世界。从安装到使用都是自己一步一步的去验证，坑是要走过，才知道为何原来如此。 安装的是CentOS7的mini版，安装过程就略了，嘿嘿，这让我想到了高中看数学答案的时候最不喜欢看到的就是答案：（略）。 安装之后linux是没有网络的，这让初学者很是蛋疼，百度嘛，会用到 [root@centos1 ~]#ifconfig 结果很可能显示： -bash: ifconfig: command not found 很正常，毕竟是mini版的，很多package（软件包）是没有的，也就没有这个命令，linux存放外部命令的路径在： /usr/sbin 可以使用ls命令查看： ls /usr/sbin/ 那我们不用ifconfig这个命令，我们用什么呢，不急我们可以查看命令啊，查看后可以用什么呢，我们可以看到可以用ip这个命令 ip [选项] 操作对象{link|addr|route...} 12345678910111213141516# ip link show # 显示网络接口信息# ip link set eth0 upi # 开启网卡# ip link set eth0 down # 关闭网卡# ip link set eth0 promisc on # 开启网卡的混合模式# ip link set eth0 promisc offi # 关闭网卡的混个模式# ip link set eth0 txqueuelen 1200 # 设置网卡队列长度# ip link set eth0 mtu 1400 # 设置网卡最大传输单元# ip addr show # 显示网卡IP信息# ip addr add 192.168.0.1/24 dev eth0 # 设置eth0网卡IP地址192.168.0.1# ip addr del 192.168.0.1/24 dev eth0 # 删除eth0网卡IP地址# ip route list # 查看路由信息# ip route add 192.168.4.0/24 via 192.168.0.254 dev eth0 # 设置192.168.4.0网段的网关为192.168.0.254,数据走eth0接口# ip route add default via 192.168.0.254 dev eth0 # 设置默认网关为192.168.0.254# ip route del 192.168.4.0/24 # 删除192.168.4.0网段的网关# ip route del default # 删除默认路由 输入ip addr试试： [root@centos1 ~]#ip addr 可以观察到enp2s0这块网卡（这是我的网卡）没有ip地址。既然没有ip地址，那直接去/etc/sysconfig/network-scripts目录中看一下网卡的配置文件吧 [root@centos1 ~]#ls /etc/sysconfig/network-scripts/ 我们可以看到ifcfg-enp2s0这个网卡的配置文件，我们接着查看ifcfg-enp2s0配置信息，使用cat命令：1234567891011121314151617[root@centos1 ~]#cat /etc/sysconfig/network-scripts/ifcfg-enp2s0HWADDR=00:E0:69:01:6A:96TYPE=EthernetBOOTPROTO=dhcpDEFROUTE=yesPEERDNS=yesPEERROUTES=yesIPV4_FAILURE_FATAL=noIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_PEERDNS=yesIPV6_PEERROUTES=yesIPV6_FAILURE_FATAL=noNAME=enp2s0UUID=5b0a7d76-1602-4e19-aee6-29f57618ca01ONBOOT=no 从上面的配置中我们可以看到虽然BOOTPROTO=dhcp，但是ONBOOT=no，这里用vi将ONBOOT=no改成ONBOOT=yes之后，让其自动获取ip,然后再重启CentOS系统。重启命令： [root@centos1 ~]#shutdown -r 重启之后再使用 ip addr查看，是不是获取到ip地址了呢。当然，这里我阴险的笑了，是可以不用重启，我们可以通过重启网络服务来使网卡配置文件生效： systemctl restart network 固定IP地址固定电脑IP，需要将网卡的配置文件里面的dhcp（动态主机配置协议）注释掉，用#将BOOTPROTO=dhcp注释，并添加一下参数： IPADDR0=172.8.1.211 PREFIX0=24 GATEWAY0=172.8.1.1 DNS1=172.8.1.1 设置之后，我们的IP地址就被固定为172.8.1.211这个IP了。PREFIX0指的是子网掩码的位数；GATEWAY0指的是网关。如果你喜欢用ifconfig命令，你可以安装net-tools组件： [root@centos1 ~]#yum install net-tools 连接无线wifi当然，linux也是可以连接无线的，笔记本通常会用到这样的配置。这需要无线网卡的支持，我们可以通过以下命令查看是否有无线网卡驱动： dmesg | grep firmware 如果您得到类似 SIOCSIFFLAGS: No such file or directory 这样的输出，意味着您得手动加载安装驱动；如果没有输出，则表明系统无线网卡已经存在驱动。则可以进行连接无线的配置：1.查看无线网口： iw dev interface后面即为无线网口号2.激活无线网络接口： ip link set wls1 up 3.查看接口是否激活： ip link show wls1 wls1: mtu 1500 qdisc mq state DOWN mode DORMANT group default qlen 1000 link/ether 00:11:22:33:44:55 brd ff:ff:ff:ff:ff:ff&lt; BROADCAST,MULTICAST,UP,LOWER_UP&gt; 中的UP 表明该接口激活成功，后面的 state DOWN 无关紧要4.查看无线网络连接情况： iw wls1 link 显示是无连接的5.扫描可连接的wifi iw wls1 scan | grep SSID 6.找到你需要的wifi，连接指定的SSID wpa_supplicant -B -i wlp3s0 -c &lt;(wpa_passphrase &quot;ssid&quot; &quot;psk&quot;) 将ssid替换为实际的网络名称，psk替换为无线密码，请保留引号。7.用dhcp获得IP分配： dhclient wlp3s0 8.测试是否成功地从路由器获取了ip ip addr show wls1 无线配置至此完成，您可以通过PING命令测试网络是否连接上。","categories":[{"name":"Linux","slug":"Linux","permalink":"https://github.com/LIGITH/categories/Linux/"}],"tags":[{"name":"后端","slug":"后端","permalink":"https://github.com/LIGITH/tags/后端/"}]}]}